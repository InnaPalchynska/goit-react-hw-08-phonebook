{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","redux/contacts/contactsSelectors.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","views/ContactsView.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","getContactsItems","state","contacts","items","getContactsFilter","filter","getVisibleContacts","createSelector","allContacts","normalizedFilter","name","includes","ContactForm","handleAddContact","useState","setName","number","setNumber","useSelector","selectors","dispatch","useDispatch","useEffect","contactsOperations","fetchContacts","handleChangeForm","target","value","resetForm","onSubmit","e","preventDefault","fetchAddContacts","id","uuidv4","forEach","contact","alert","type","pattern","title","required","onChange","ContactList","visibleContacts","map","onClick","operations","fetchDeleteContacts","Filter","filterValue","actions","filterContact","placeholder","ContactsView"],"mappings":"mMAGIA,E,eACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7EX,GAAQG,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,MAAMI,cAMzf,IAAKf,EAASC,GACZ,MAAMe,UAAU,+BAGlB,OAAOf,GEHMgB,MApBf,SAAYC,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQvB,KAAOA,KAK7C,GAHAyB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBc,EAAIR,EAASN,GAAKe,EAAKf,GAGzB,OAAOc,EAGT,OAAOV,EAAUW,I,eClBbE,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAC3CC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAenC,GACbL,mBACAI,oBACAE,mBAhByBC,YACzB,CAACP,EAAkBI,IACnB,SAACI,EAAaH,GACZ,IAAMI,EAAmBJ,EAAOZ,cAMhC,OAJuBe,EAAYH,QAAO,qBAAGK,KACtCjB,cAAckB,SAASF,U,eCJnB,SAASG,EAAYC,GAClC,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMf,EAAWgB,YAAYC,EAAUnB,kBAEjCoB,EAAWC,cACjBC,qBAAU,kBAAMF,EAASG,IAAmBC,mBAAkB,CAACJ,IAC/D,IAAMK,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBhB,EAAgBgB,EAAhBhB,KAAMiB,EAAUD,EAAVC,MACd,OAAQjB,GACN,IAAK,OACHK,EAAQY,GACR,MACF,IAAK,SACHV,EAAUU,GACV,MACF,QACE,SAsBAC,EAAY,WAChBb,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMY,SAfiB,SAAAC,GACvBA,EAAEC,iBACFX,EACEG,IAAmBS,iBAAiB,CAAEC,GAAIC,IAAUxB,OAAMM,YAX5Dd,EAASiC,SAAQ,SAAAC,GACXA,EAAQ1B,OAASA,GAAQ0B,EAAQpB,SAAWA,GAC9CqB,MAAM,gIAYVT,KASA,UACE,uBACEU,KAAK,OACL5B,KAAK,OACL6B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOjB,EACPgC,SAAUjB,IAGZ,uBACEa,KAAK,MACL5B,KAAK,SACL6B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRd,MAAOX,EACP0B,SAAUjB,IAGZ,wBAAQa,KAAK,SAAb,4BCtEN,IAqBeK,EArBK,WAClB,IAAMC,EAAkB1B,YAAYC,EAAUb,oBAExCc,EAAWC,cACjB,OAA+B,IAA3BuB,EAAgBrD,OAAqB,KAEvC,6BACGqD,EAAgBC,KAAI,SAAAT,GAAO,OAC1B,+BACGA,EAAQ1B,KADX,KACmB0B,EAAQpB,OACzB,wBACE8B,QAAS,SAAAb,GAAE,OAAIb,EAAS2B,IAAWC,oBAAoBZ,EAAQH,MADjE,sBAFOG,EAAQH,U,QCKVgB,EAbA,WACb,IAAMC,EAAchC,YAAYC,EAAUf,mBACpCgB,EAAWC,YAAY8B,IAAQC,eACrC,OACE,uBACEd,KAAK,OACLI,SAAU,SAAAZ,GAAC,OAAIV,EAAS+B,IAAQC,cAActB,EAAEJ,OAAOC,SACvDA,MAAOuB,EACPG,YAAY,iBCRH,SAASC,IACtB,OACE,qCACE,2CACA,cAAC1C,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/4.dda55b0c.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContactsItems = state => state.contacts.items;\r\nconst getContactsFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContactsItems, getContactsFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    const getAllContacts = allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n\r\n    return getAllContacts;\r\n  },\r\n);\r\n\r\nexport default {\r\n  getContactsItems,\r\n  getContactsFilter,\r\n  getVisibleContacts,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport selectors from '../../redux/contacts/contactsSelectors';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nexport default function ContactForm(handleAddContact) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(selectors.getContactsItems);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n  const handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkContacts = () => {\r\n    contacts.forEach(contact => {\r\n      if (contact.name === name || contact.number === number) {\r\n        alert('Такой контакт уже есть!!!!');\r\n      }\r\n      return;\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      contactsOperations.fetchAddContacts({ id: uuidv4(), name, number }),\r\n    );\r\n    checkContacts();\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport selectors from '../../redux/contacts/contactsSelectors';\r\nimport operations from '../../redux/contacts/contactsOperations';\r\n\r\nconst ContactList = () => {\r\n  const visibleContacts = useSelector(selectors.getVisibleContacts);\r\n\r\n  const dispatch = useDispatch();\r\n  if (visibleContacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {visibleContacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button\r\n            onClick={id => dispatch(operations.fetchDeleteContacts(contact.id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport selectors from '../../redux/contacts/contactsSelectors';\r\nimport actions from '../../redux/contacts/contactsActions';\r\n\r\nconst Filter = () => {\r\n  const filterValue = useSelector(selectors.getContactsFilter);\r\n  const dispatch = useDispatch(actions.filterContact);\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={e => dispatch(actions.filterContact(e.target.value))}\r\n      value={filterValue}\r\n      placeholder=\"Enter name \"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from '../components/contactForm/ContactForm';\r\nimport ContactList from '../components/contactList/ContactList';\r\nimport Filter from '../components/filter/Filter';\r\n\r\nexport default function ContactsView() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}