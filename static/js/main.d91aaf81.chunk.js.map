{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authSlice.js","services/contactsAPI.js","redux/contacts/contactsOperations.js","redux/contacts/contactsActions.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","console","log","rejectWithValue","get","authSelectors","getIsLoggedIn","user","isLoggedIn","getUsername","name","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","contact","contactId","delete","fetchContacts","fetchAddContacts","fetchDeleteContacts","type","contactsApi","contacts","filterContact","createAction","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","Avatar","src","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LogInView","ContactsView","App","fallback","path","items","createReducer","filter","id","actionContacts","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d91aaf81.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    //Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    // Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      //  Добавить обработку ошибки error.message\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.user.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.user.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './authOperations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      console.log(action);\r\n      state.name = action.payload.name;\r\n      // state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import axios from 'axios';\r\n\r\nasync function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nasync function fetchAddContacts(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nasync function fetchDeleteContacts(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n\r\nexport default { fetchContacts, fetchAddContacts, fetchDeleteContacts };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport contactsApi from '../../services/contactsAPI';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'сontacts/fetchContactsRequest',\r\n  async (type, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchAddContacts = createAsyncThunk(\r\n  'сontacts/fetchAddContactsRequest',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      await contactsApi.fetchAddContacts(contact);\r\n      return contact;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const fetchDeleteContacts = createAsyncThunk(\r\n  'сontacts/fetchDeleteContactsRequest',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await contactsApi.fetchDeleteContacts(contactId);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport default {\r\n  fetchContacts,\r\n  fetchAddContacts,\r\n  fetchDeleteContacts,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n\r\nexport default {\r\n  filterContact,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Phonebook\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Hello, {name}</span>\r\n      <Avatar src=\"/broken-image.jpg\" style={styles.avatar} />\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\nimport './App.css';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LogInView = lazy(() => import('./views/LogInView.js'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  return (\n    <>\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <LogInView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actionContacts from './contactsActions';\r\nimport {\r\n  fetchContacts,\r\n  fetchAddContacts,\r\n  fetchDeleteContacts,\r\n} from './contactsOperations';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (state, { payload }) => payload,\r\n  [fetchAddContacts.fulfilled]: (state, { payload }) => [payload, ...state],\r\n  [fetchDeleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actionContacts.filterContact]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","// import { configureStore } from '@reduxjs/toolkit';\r\n// import contactsReducer from './contacts/contactsReducer';\r\n\r\n//////////\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n//////\r\n\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: contactsReducer,\r\n//   },\r\n// });\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}